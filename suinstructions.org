#+TITLE: How to run docker

* Build process

  #+begin_src sh
  cd docker
  ./build.sh
  #+end_src

which does

#+begin_src sh
docker build -f Dockerfile -t iitdbgroup/uadbreproduce .
#+end_src

modify `Dockerfile` on failure and repeat from where you left off.

- create a contain from a partial build:

1. get the image id of the latest image

#+begin_src sh
lord_pretzel@BorisMacBook:~/Documents/workspace/UADB_Reproducibility/docker (master %) 0$docker images
REPOSITORY                                        TAG                 IMAGE ID            CREATED             SIZE
<none>                                            <none>              e2bdecf83453        14 minutes ago      1.87GB
#+end_src

in this case it is `e2bdecf83453`

2. run a container from this image with bash command

#+begin_src sh
docker run -ti e2bdecf83453 /bin/bash
#+end_src

3. mount gprom src into container with `-v /home/su/mydir:/mysrc` maps `.` into `/mysrc` in the container (absolute path on the host)

4. publish the image (login first)

#+begin_src sh
docker login
docker push iitdbgroup/uadbreproduce
#+end_src

* Dockerfile syntax

- `RUN` run a command in the container for the image
- `ENTRYPOINT` command to run
- `ADD` copy local file into image
